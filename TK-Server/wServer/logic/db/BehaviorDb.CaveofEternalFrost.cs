using common.resources;
using wServer.logic.behaviors;
using wServer.logic.loot;
using wServer.logic.transitions;

namespace wServer.logic
{
    partial class BehaviorDb
    {
        private _ CaveofEternalFrost = () => Behav()
        .Init("Abominable Snowman",
            new State(
                new ScaleHP2(30),
                new State("idle",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new PlayerWithinTransition(20, "prepare")
                    ),
                new State("prepare",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new Flash(0xCC1A1A, 0.5, 12),
                    new Taunt("I sense someone has stumbled into my midst"),
                    new Taunt("and so willingly.. and right around feeding time!"),
                    new Taunt("Prepare.. to DIE!"),
                    new TimedTransition(10000, "rage")
                    ),
                new State("rage",
                    new Wander(1),
                    new Taunt("ARGGGG!"),
                    new Shoot(15, 20, projectileIndex: 0, fixedAngle: 15, coolDownOffset: 400, coolDown: 1000),
                    new Shoot(15, 20, projectileIndex: 1, fixedAngle: 30, coolDownOffset: 600, coolDown: 1000),
                    new HpLessTransition(0.9, "chase")
                    ),
                new State("chase",
                    new Follow(0.75, range: 8),
                    new Shoot(25, 8, projectileIndex: 3, shootAngle: 45, coolDown: 500),
                    new Shoot(12, 3, shootAngle: 10, projectileIndex: 0, predictive: 1.2, coolDown: 1000),
                    new HpLessTransition(0.8, "claws")
                    ),
                new State("claws",
                    new ReturnToSpawn(1),
                    new HpLessTransition(0.6, "stomp"),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 0, coolDownOffset: 100),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 18, coolDownOffset: 200),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 36, coolDownOffset: 300),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 54, coolDownOffset: 400),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 72, coolDownOffset: 500),

                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 90, coolDownOffset: 600),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 108, coolDownOffset: 700),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 126, coolDownOffset: 800),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 144, coolDownOffset: 900),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 162, coolDownOffset: 1000),

                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 180, coolDownOffset: 1100),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 198, coolDownOffset: 1200),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 216, coolDownOffset: 1300),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 234, coolDownOffset: 1400),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 252, coolDownOffset: 1500),

                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 270, coolDownOffset: 1600),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 288, coolDownOffset: 1700),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 306, coolDownOffset: 1800),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 324, coolDownOffset: 1900),
                    new Shoot(15, count: 1, projectileIndex: 2, fixedAngle: 342, coolDownOffset: 2000),
                    new TimedTransition(2000, "claws")
                    ),
                new State("stomp",
                    new Taunt("NOO"),
                    new Taunt("You may have injured me, but I'm the protector of the Ice Queen.. It takes a little more than that to kill me!"),
                    new Charge(2, 10, 2000),
                    new Shoot(10, 8, projectileIndex: 3, predictive: 1, coolDown: 1000),
                    new Shoot(10, 4, projectileIndex: 3, predictive: 1.2, coolDown: 1200),
                    new HpLessTransition(0.5, "survival")
                    ),
                new State("survival",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, false),
                    new Taunt("THAT'S IT! DIE"),
                    new Follow(1.2, range: 7),
                    new Shoot(10, 4, projectileIndex: 0, predictive: 1.3, coolDown: 200),
                    new TimedTransition(30000, "circle player")
                    ),
                new State("circle player",
                    new ReturnToSpawn(1),
                    new Shoot(radius: 10, count: 3, projectileIndex: 2, shootAngle: 10, angleOffset: .7, predictive: .9, coolDown: 300),
                    new Shoot(radius: 12, count: 4, projectileIndex: 2, shootAngle: 180, angleOffset: .7, predictive: 1.2, coolDown: 300),
                    new Prioritize(
                        new StayCloseToSpawn(1.3, 9),
                        new Orbit(2, 6, 8, null),
                        new Follow(1.5, 12, coolDown: 1000),
                        new Follow(1, 10, coolDown: 1500)
                        ),
                    new HpLessTransition(0.4, "explode")
                    ),
                new State("explode",
                    new ReturnToSpawn(1),
                    new Taunt(".......AHHHHHHHHHHHHH........"),
                    new Shoot(15, 4, projectileIndex: 2, predictive: 1.3, coolDown: 1000),

                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 0, coolDownOffset: 200, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 15, fixedAngle: 24, coolDownOffset: 400, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 48, coolDownOffset: 600, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 15, fixedAngle: 72, coolDownOffset: 800, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 96, coolDownOffset: 1000, coolDown: 3000),

                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 20, fixedAngle: 120, coolDownOffset: 1200, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 144, coolDownOffset: 1400, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 15, fixedAngle: 168, coolDownOffset: 1600, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 192, coolDownOffset: 1800, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 20, fixedAngle: 216, coolDownOffset: 2000, coolDown: 3000),

                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 240, coolDownOffset: 2200, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 15, fixedAngle: 264, coolDownOffset: 2400, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 288, coolDownOffset: 2600, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 15, fixedAngle: 312, coolDownOffset: 2800, coolDown: 3000),
                    new Shoot(20, count: 3, projectileIndex: 1, shootAngle: 10, fixedAngle: 336, coolDownOffset: 3000, coolDown: 3000),
                    new HpLessTransition(0.2, "rage")
                    ),
                new State("rage",
                    new Taunt("ARGGG!"),
                    new Shoot(10, 15, projectileIndex: 0, shootAngle: 24, coolDown: 500),
                    new Shoot(10, 30, projectileIndex: 1, shootAngle: 12, coolDown: 1000),
                    new HpLessTransition(0.01, "die")
                    ),
                new State("die",
                    new Flash(0xCC1A1A, 5, 12),
                    new Suicide()
                    )
                ),
            new Threshold(0.01,
                LootTemplates.DustLoot()
                ),
            new Threshold(0.01,
                new TierLoot(13, ItemType.Weapon, 0.1),
                new TierLoot(14, ItemType.Weapon, 0.05),
                new TierLoot(13, ItemType.Armor, 0.1),
                new TierLoot(14, ItemType.Armor, 0.05),
                new TierLoot(5, ItemType.Ring, 0.1),
                new TierLoot(6, ItemType.Ring, 0.05),
                new TierLoot(6, ItemType.Ability, 0.07),
                new ItemLoot("Greater Potion of Life", 0.5),
                new ItemLoot("Greater Potion of Vitality", 0.5),
                new ItemLoot("Greater Potion of Mana", 0.5)
                )
            )
        .Init("Queen of Ice",
            new State(
                new State("idle",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, true),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                    new PlayerWithinTransition(15, "prepare")
                    ),
                new State("prepare",
                    new RemoveConditionalEffect(ConditionEffectIndex.Invincible),
                    new Taunt("I see you have defeated my Yeti.."),
                    new Taunt("That was a mistake! Leave or suffer the consequences!"),
                    new Flash(0x00E8FF, 0.5, 12),
                    new TimedTransition(10000, "attack1")
                    ),
                new State("attack1",
                    new RemoveConditionalEffect(ConditionEffectIndex.Invulnerable),
                    new Taunt("No? Okay then... AHHHHHHH!"),
                    new Wander(.5),
                    new Shoot(15, 3, projectileIndex: 0, shootAngle: 10, predictive: 1, coolDown: 1000),
                    new Shoot(20, 30, projectileIndex: 1, shootAngle: 12, predictive: 1.2, coolDown: 3000),
                    new Shoot(20, 12, projectileIndex: 2, shootAngle: 30, predictive: 1.2, coolDown: 2000),
                    new Shoot(20, 8, projectileIndex: 3, shootAngle: 45, predictive: 1.2, coolDown: 1500),
                    new TossObject("Evil Snowman", 8, coolDown: 10000, angle: 0),
                    new TossObject("Evil Snowman", 8, coolDown: 10000, angle: 72),
                    new TossObject("Evil Snowman", 8, coolDown: 10000, angle: 144),
                    new TossObject("Evil Snowman", 8, coolDown: 10000, angle: 216),
                    new TossObject("Evil Snowman", 8, coolDown: 10000, angle: 288),
                    new HpLessTransition(0.9, "prepare 1")
                    ),
                new State("prepare 1",
                    new ReturnToSpawn(1),
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, false),
                    new Taunt("Guardians! Protect me!"),
                    new TimedTransition(5000, "guardians")
                    ),
                new State("guardians",
                    new TossObject("Guardian of the Ice Queen", 8, coolDown: 10000, angle: 0),
                    new TossObject("Guardian of the Ice Queen", 8, coolDown: 10000, angle: 72),
                    new TossObject("Guardian of the Ice Queen", 8, coolDown: 10000, angle: 144),
                    new TossObject("Guardian of the Ice Queen", 8, coolDown: 10000, angle: 216),
                    new TossObject("Guardian of the Ice Queen", 8, coolDown: 10000, angle: 288),
                    new Shoot(20, 3, shootAngle: 5, projectileIndex: 1, fixedAngle: 60),
                    new Shoot(20, 3, shootAngle: 5, projectileIndex: 1, fixedAngle: 120),
                    new Shoot(20, 3, shootAngle: 5, projectileIndex: 1, fixedAngle: 180),
                    new Shoot(20, 3, shootAngle: 5, projectileIndex: 1, fixedAngle: 240),
                    new Shoot(20, 3, shootAngle: 5, projectileIndex: 1, fixedAngle: 300),
                    new Shoot(20, 3, shootAngle: 5, projectileIndex: 1, fixedAngle: 0),
                    new Shoot(20, 4, projectileIndex: 0, predictive: 1, coolDown: 2000),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 0, shootAngle: 10, coolDownOffset: 0, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 45, shootAngle: 10, coolDownOffset: 150, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 90, shootAngle: 10, coolDownOffset: 300, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 135, shootAngle: 10, coolDownOffset: 450, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 180, shootAngle: 10, coolDownOffset: 600, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 225, shootAngle: 10, coolDownOffset: 750, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 270, shootAngle: 10, coolDownOffset: 900, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 315, shootAngle: 10, coolDownOffset: 1150, coolDown: 1450),
                    new Shoot(20, 3, projectileIndex: 2, fixedAngle: 360, shootAngle: 10, coolDownOffset: 1300, coolDown: 1450),
                    new HpLessTransition(0.7, "attack2")
                    ),
                new State("attack2",
                    new Taunt("Never AGAIN!"),
                    new ReturnToSpawn(1),
                    new RingAttack(20, 6, 0, projectileIndex: 3, 0.07, 0, coolDown: 100),
                    new Reproduce("Evil Snowman", 5, 5, 5000),
                    new Grenade(5, 90, 15, null, 1500, ConditionEffectIndex.Confused, 1500, 0xFF0000),
                    new Grenade(5, 150, 15, null, 2000, ConditionEffectIndex.Stunned, 4000, 0x0097FF),
                    new Shoot(15, 30, shootAngle: 12, projectileIndex: 1, coolDown: 1500),
                    new HpLessTransition(0.5, "prepare2")
                    ),
                new State("prepare2",
                    new Taunt("You may have injured me, but you've seen nothing yet!"),
                    new Flash(0x00E8FF, 5, 10),
                    new TimedTransition(10000, "rage")
                    ),
                new State("rage",
                    new Chase(1.2, 8),
                    new Shoot(10, 2, projectileIndex: 0, shootAngle: 5, predictive: 1.2, coolDown: 800),
                    new Shoot(5, 12, projectileIndex: 1, shootAngle: 30, coolDown: 1200),
                    new HpLessTransition(0.4, "prepare3")
                    ),
                new State("prepare3",
                    new ReturnToSpawn(1),
                    new Taunt("I shall finish YOU ALL!"),
                    new TimedTransition(3000, "1")
                    ),
                new State("1",
                    new HpLessTransition(0.3, "jump"),
                    new Shoot(20, 12, projectileIndex: 1, shootAngle: 5, fixedAngle: 0, coolDown: 500), 
                    new TimedTransition(1000, "2")
                    ),
                new State("2",
                    new HpLessTransition(0.3, "jump"),
                    new Shoot(20, 16, projectileIndex: 1, shootAngle: 5, fixedAngle: 90, coolDown: 500),
                    new TimedTransition(1000, "3")
                    ),
                new State("3",
                    new HpLessTransition(0.3, "jump"),
                    new Shoot(20, 19, projectileIndex: 1, shootAngle: 5, fixedAngle: 180, coolDown: 500),
                    new TimedTransition(300, "4")
                    ),
                new State("4",
                    new HpLessTransition(0.3, "jump"),
                    new Shoot(20, 19, projectileIndex: 4, shootAngle: 5, fixedAngle: 270, coolDown: 500),
                    new TimedTransition(300, "1")
                    ),
                new State("jump",
                    new Chase(1.2, 10, duration: 8, coolDown: 2000),
                    new Shoot(10, 8, projectileIndex: 0, coolDown: 600),
                    new Shoot(20, 4, projectileIndex: 0, coolDown: 1200),
                    new Shoot(5, 30, projectileIndex: 1, predictive: 1, shootAngle: 12, coolDown: 1000),
                    new HpLessTransition(0.2, "neardeath")
                    ),
                new State("neardeath",
                    new ReturnToSpawn(1),
                    new Taunt("I may be injured, but I won't go out without a FIGHT!"),
                    new TimedTransition(5000, "lasthope")
                    ),
                new State("lasthope",
                    new Taunt("I ASKED YOU TO LEAVE!"),
                    new HpLessTransition(0.01, "dead"),
                    new Reproduce("Evil Snowman", densityMax: 4, coolDown: 5000),

                    new TossObject("Guardian of the Ice Queen", 10, coolDown: 99999, angle: 0),
                    new TossObject("Guardian of the Ice Queen", 10, coolDown: 99999, angle: 90),
                    new TossObject("Guardian of the Ice Queen", 10, coolDown: 99999, angle: 180),
                    new TossObject("Guardian of the Ice Queen", 10, coolDown: 99999, angle: 270),

                    new Wander(.8),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 0, coolDownOffset: 100),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 10, coolDownOffset: 200),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 20, coolDownOffset: 300),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 30, coolDownOffset: 400),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 40, coolDownOffset: 500),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 50, coolDownOffset: 600),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 60, coolDownOffset: 700),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 70, coolDownOffset: 800),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 80, coolDownOffset: 900),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 90, coolDownOffset: 1000),

                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 100, coolDownOffset: 1100),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 110, coolDownOffset: 1200),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 120, coolDownOffset: 1300),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 130, coolDownOffset: 1400),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 140, coolDownOffset: 1500),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 150, coolDownOffset: 1600),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 160, coolDownOffset: 1700),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 170, coolDownOffset: 1800),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 180, coolDownOffset: 1900),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 190, coolDownOffset: 2000),

                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 200, coolDownOffset: 2100),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 210, coolDownOffset: 2200),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 220, coolDownOffset: 2300),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 230, coolDownOffset: 2400),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 240, coolDownOffset: 2500),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 250, coolDownOffset: 2600),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 260, coolDownOffset: 2700),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 270, coolDownOffset: 2800),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 280, coolDownOffset: 2900),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 290, coolDownOffset: 3000),

                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 300, coolDownOffset: 3100),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 310, coolDownOffset: 3200),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 320, coolDownOffset: 3300),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 330, coolDownOffset: 3400),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 340, coolDownOffset: 3500),
                    new Shoot(15, projectileIndex: 4, count: 4, shootAngle: 2, fixedAngle: 350, coolDownOffset: 3600),
                    new Shoot(20, 36, shootAngle: 10, projectileIndex: 1, angleOffset: 10, coolDown: 8000),
                    new Shoot(20, 5, projectileIndex: 0, predictive: 0.3, coolDown: 8000),
                    new TimedTransition(3700, "lasthope")
                    ),
                new State("dead",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, false),
                    new Shoot(15, 30, projectileIndex: 0, shootAngle: 12, coolDown: 5000),
                    new Suicide()
                    )
                )
            )
        .Init("Corrupt Snowman Switch",
            new State(
                new ScaleHP2(30),
                new State("Idle",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, true),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                    new PlayerWithinTransition(20, "prepare")
                    ),
                new State("prepare",
                    new RemoveConditionalEffect(ConditionEffectIndex.Invulnerable),
                    new RemoveConditionalEffect(ConditionEffectIndex.Invincible),
                    new Taunt("I am the protector and holder of the key you seek.."),
                    new Taunt("Defeat me, and I shall grant you access to what lies ahead"),
                    new TimedTransition(10000, "attack1")
                    ),
                new State("attack1",
                    new Taunt("Now prepare for battle!"),
                    new TossObject("Evil Snowman", 3, 0, 10000),
                    new TossObject("Evil Snowman", 3, 45, 10000),
                    new TossObject("Evil Snowman", 3, 90, 10000),
                    new TossObject("Evil Snowman", 3, 135, 10000),
                    new TossObject("Evil Snowman", 3, 180, 10000),
                    new TossObject("Evil Snowman", 3, 225, 10000),
                    new TossObject("Evil Snowman", 3, 270, 10000),
                    new TossObject("Evil Snowman", 3, 315, 10000),
                    new Shoot(15, 3, projectileIndex: 0, shootAngle: 5, predictive: 1.3, coolDown: 300),
                    new Shoot(10, 30, projectileIndex: 1, shootAngle: 12, predictive: .8, coolDown: 1000),
                    new HpLessTransition(.6, "attack2")
                    ),
                new State("attack2",
                    new Taunt("My Children.. protect me!"),
                    new Reproduce("Evil Snowman", 5, 4, 10000),
                    new Shoot(20, 1, 0, 2, 60),
                    new Shoot(20, 1, 0, 2, 120),
                    new Shoot(20, 1, 0, 2, 180),
                    new Shoot(20, 1, 0, 2, 240),
                    new Shoot(20, 1, 0, 2, 300),
                    new Shoot(20, 1, 0, 2, 0),
                    new Shoot(20, 1, 0, 2, 70, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 130, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 190, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 250, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 310, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 10, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 80, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 140, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 200, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 260, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 320, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 20, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 90, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 150, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 210, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 270, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 330, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 30, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 100, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 160, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 220, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 280, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 340, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 40, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 110, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 170, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 230, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 290, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 350, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 50, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 120, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 180, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 240, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 300, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 0, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 60, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 130, coolDownOffset: 1400),
                    new Shoot(20, 1, 0, 2, 190, coolDownOffset: 1400),
                    new Shoot(20, 1, 0, 2, 250, coolDownOffset: 1400),
                    new Shoot(20, 1, 0, 2, 310, coolDownOffset: 1400),
                    new Shoot(20, 1, 0, 2, 10, coolDownOffset: 1400),
                    new Shoot(20, 1, 0, 2, 70, coolDownOffset: 1400),
                    new Shoot(20, 1, 0, 2, 140, coolDownOffset: 1600),
                    new Shoot(20, 1, 0, 2, 200, coolDownOffset: 1600),
                    new Shoot(20, 1, 0, 2, 260, coolDownOffset: 1600),
                    new Shoot(20, 1, 0, 2, 320, coolDownOffset: 1600),
                    new Shoot(20, 1, 0, 2, 20, coolDownOffset: 1600),
                    new Shoot(20, 1, 0, 2, 80, coolDownOffset: 1600),
                    new Shoot(20, 1, 0, 2, 150, coolDownOffset: 2000),
                    new Shoot(20, 1, 0, 2, 210, coolDownOffset: 2000),
                    new Shoot(20, 1, 0, 2, 250, coolDownOffset: 2000),
                    new Shoot(20, 1, 0, 2, 330, coolDownOffset: 2000),
                    new Shoot(20, 1, 0, 2, 30, coolDownOffset: 2000),
                    new Shoot(20, 1, 0, 2, 90, coolDownOffset: 2000),
                    new TimedTransition(2100, "attack3")
                    ),
                new State("attack3",
                    new HpLessTransition(0.01, "granted"),
                    new Shoot(20, 1, 0, 2, 120),
                    new Shoot(20, 1, 0, 2, 180),
                    new Shoot(20, 1, 0, 2, 240),
                    new Shoot(20, 1, 0, 2, 300),
                    new Shoot(20, 1, 0, 2, 0),
                    new Shoot(20, 1, 0, 2, 60),
                    new Shoot(20, 1, 0, 2, 110, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 170, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 230, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 290, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 350, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 50, coolDownOffset: 200),
                    new Shoot(20, 1, 0, 2, 100, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 160, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 220, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 280, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 340, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 40, coolDownOffset: 400),
                    new Shoot(20, 1, 0, 2, 90, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 150, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 210, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 270, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 330, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 30, coolDownOffset: 600),
                    new Shoot(20, 1, 0, 2, 80, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 140, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 200, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 260, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 320, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 20, coolDownOffset: 800),
                    new Shoot(20, 1, 0, 2, 70, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 130, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 190, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 250, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 310, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 10, coolDownOffset: 1000),
                    new Shoot(20, 1, 0, 2, 60, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 120, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 180, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 240, coolDownOffset: 1200),
                    new Shoot(20, 1, 0, 2, 300, coolDownOffset: 1200),
                    new TimedTransition(1400, "attack2")
                    ),
                new State("granted",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, false),
                    new Taunt("I shall grant you access!"),
                    new Shoot(12, 8, projectileIndex: 1, shootAngle: 45, coolDown: 5000),
                    new Suicide()
                    )
                )
            )
        .Init("Corrupt Snowman Switch 2",
            new State(
                new ScaleHP2(30),
                new State("idle",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, true),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                    new PlayerWithinTransition(20, "prepare")
                    ),
                new State("prepare",
                    new Taunt("I see you have obtained 1 of the 2 keys.."),
                    new Taunt("This time.. it won't be so easy!"),
                    new TimedTransition(10000, "attack1")
                    ),
                new State("attack1",
                    new RemoveConditionalEffect(ConditionEffectIndex.Invulnerable),
                    new RemoveConditionalEffect(ConditionEffectIndex.Invincible),
                    new HpLessTransition(.4, "attack2"),
                    new Wander(.8),
                    new TossObject("Frozen Elf", 12, angle: 30, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 60, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 90, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 120, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 150, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 180, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 210, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 240, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 270, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 300, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 330, coolDown: 99999),
                    new TossObject("Frozen Elf", 12, angle: 360, coolDown: 99999),

                    new Shoot(20, 6, projectileIndex: 0, shootAngle: 10, fixedAngle: 0, coolDownOffset: 400),
                    new Shoot(20, 6, projectileIndex: 0, shootAngle: 10, fixedAngle: 60, coolDownOffset: 800),
                    new Shoot(20, 6, projectileIndex: 0, shootAngle: 10, fixedAngle: 120, coolDownOffset: 1200),
                    new Shoot(20, 6, projectileIndex: 0, shootAngle: 10, fixedAngle: 180, coolDownOffset: 1600),
                    new Shoot(20, 6, projectileIndex: 0, shootAngle: 10, fixedAngle: 240, coolDownOffset: 2000),
                    new Shoot(20, 6, projectileIndex: 0, shootAngle: 10, fixedAngle: 300, coolDownOffset: 2400),
                    new TimedTransition(2400, "attack1")
                    ),
                new State("attack2",
                    new Taunt("I will not hand over the key!"),
                    new Chase(.8),
                    new Shoot(15, 3, projectileIndex: 1, shootAngle: 15, predictive: 1.1, coolDown: 500),
                    new Shoot(4, 12, projectileIndex: 2, predictive: .6, coolDown: 1100),
                    new HpLessTransition(.01, "granted")
                    ),
                new State("granted",
                    new ReturnToSpawn(1),
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, false),
                    new Taunt("I have failed you my master.. the gate has been OPENNED!"),
                    new Shoot(20, 30, projectileIndex: 0, coolDown: 5000),
                    new Suicide()
                    )
                )
            )
        .Init("Guardian of the Ice Queen",
            new State(
                new ScaleHP2(30),
                new State("attack",
                    new Taunt("Protect the Queen at all cost!"),
                    new Prioritize(
                        new Protect(.5, "Queen of Ice", protectionRange: 12)
                        ),
                    new Shoot(15, 2, projectileIndex: 0, shootAngle: 5, predictive: 1.2, coolDown: 400),
                    new HpLessTransition(.3, "attack2")
                    ),
                new State("attack2",
                    new Taunt("NOO, DIE!"),
                    new Chase(1),
                    new Shoot(10, 8, projectileIndex: 1, shootAngle: 5, predictive: 1.2, coolDown: 1000)
                    )
                )
            )
        .Init("Evil Snowman",
            new State(
                new ScaleHP2(30),
                new State("attack",
                    new Taunt("attack!"),
                    new Chase(1, 15, coolDown: 1500),
                    new Shoot(8, 6, projectileIndex: 0, predictive: 0.8, coolDown: 500),
                    new HealSelf(coolDown: 5000)
                    )
                )
            )
        .Init("Cursed Polar Bear",
            new State(
                new ScaleHP2(30),
                new State("attack",
                    new Wander(0.5),
                    new TossObject("Enraged Cub", range: 3, angle: 90, coolDown: 10000),
                    new TossObject("Enraged Cub", range: 3, angle: 180, coolDown: 10000),
                    new TossObject("Enraged Cub", range: 3, angle: 270, coolDown: 10000),
                    new TossObject("Enraged Cub", range: 3, angle: 360, coolDown: 10000),
                    new Shoot(15, 3, projectileIndex: 0, predictive: 1, shootAngle: 11, coolDown: 600),
                    new Shoot(20, 1, projectileIndex: 1, predictive: 1.2, coolDown: 1200)
                    )
                )
            )
        .Init("Enraged Cub",
            new State(
                new ScaleHP2(30),
                new State("Grr",
                    new Prioritize(
                        new Protect(0.5, "Cursed Polar Bear", protectionRange: 10),
                        new Follow(0.75, range: 7)
                    ),
                    new Shoot(9, 4, projectileIndex: 0, predictive: 0.6, shootAngle: 30, coolDown: 800)
                    )
                )
            )
        .Init("Guardian's Frigid Squire",
            new State(
                new ScaleHP2(30),
                new State("attack1",
                    new Wander(.9),
                    new TossObject("Frozen Elf", range: 3, angle: 0, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 45, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 90, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 135, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 180, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 225, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 270, coolDown: 10000),
                    new TossObject("Frozen Elf", range: 3, angle: 315, coolDown: 10000),
                    new Shoot(20, 2, projectileIndex: 0, shootAngle: 5, predictive: .9, coolDown: 200),
                    new Shoot(15, 8, projectileIndex: 1, shootAngle: 45, predictive: 1, coolDown: 1000)
                    )
                )
            )
        .Init("Frozen Elf",
            new State(
                new ScaleHP2(30),
                new State("rage",
                    new ConditionalEffect(ConditionEffectIndex.Invulnerable, false),
                    new ConditionalEffect(ConditionEffectIndex.Invincible, false),
                    new Chase(1.2, coolDown: 100),
                    new TimedTransition(5000, "explode")
                    ),
                new State("explode",
                    new Shoot(8, 12, projectileIndex: 0, shootAngle: 30, coolDown: 5000),
                    new TimedTransition(1000, "die")
                    ),
                new State("die",
                    new Suicide()
                    )
                ));
    }
}
